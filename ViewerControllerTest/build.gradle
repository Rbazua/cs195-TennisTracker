plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'com.test'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1' as Object
    testfxVersion = '4.0.16-alpha' as Object
    mockitoVersion = '4.3.1' as Object
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
application {
    mainModule = 'com.test.viewercontrollertest'
    mainClass = 'com.test.viewercontrollertest.HelloApplication'
}

javafx {
    version = '17.0.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'com.jfoenix:jfoenix:9.0.10'
    implementation('org.controlsfx:controlsfx:11.1.0')
    implementation('org.kordamp.ikonli:ikonli-javafx:12.2.0')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation('eu.hansolo:tilesfx:11.48') {
        exclude(group: 'org.openjfx')
    }
    testImplementation ("org.testfx:testfx-junit5:${testfxVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.testfx:testfx-core:${testfxVersion}")
    testImplementation ("org.mockito:mockito-core:${mockitoVersion}")
    testImplementation ("org.mockito:mockito-junit-jupiter:${mockitoVersion}")



}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip") as RegularFile
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}